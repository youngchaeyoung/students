# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q18lz4Db3tfhWZWb9uYAKKZ1UU5B369j
"""

import pandas as pd

# 데이터 로드
data = pd.read_csv('StudentsPerformance.csv')

# 데이터 확인
print(data.head())

# 결측치 확인
print(data.isnull().sum())

# 범주형 데이터 인코딩 (One-Hot Encoding)
data = pd.get_dummies(data, drop_first=True)

# 인코딩된 데이터 확인
print(data.head())

# 독립 변수와 종속 변수 선택
features = ['reading score', 'writing score']  # 예: 읽기 점수와 쓰기 점수를 사용
X = data[features]
y = data['math score']

from sklearn.preprocessing import StandardScaler

# 데이터 스케일링
scaler = StandardScaler()
X = scaler.fit_transform(X)

from sklearn.model_selection import train_test_split

# 데이터 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 모델 학습
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, y_train)

# 예측
y_pred = model.predict(X_test)

from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler

# 성능 평가
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R^2 Score: {r2}')

# 실제 값과 예측 값 시각화
import matplotlib.pyplot as plt

plt.scatter(y_test, y_pred)
plt.xlabel('Actual Math Score')
plt.ylabel('Predicted Math Score')
plt.title('Actual vs Predicted Math Score')
plt.show()

from sklearn.model_selection import cross_val_score

k = 5
scores = cross_val_score(model, X, y, cv=k, scoring='neg_mean_squared_error')

# 결과 출력
print(f'Mean Squared Error for each fold: {-scores}')
print(f'Average Mean Squared Error: {-scores.mean()}')
print(f'Standard Deviation of Mean Squared Error: {scores.std()}')